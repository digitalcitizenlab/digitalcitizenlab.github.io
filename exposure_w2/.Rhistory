#                position=position_dodge(width=.5)) +
# geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.7,
#                position=position_dodge(width=.5)) +
scale_y_continuous(labels = percent_format(scale = 1)) +  # Convert y-axis to percentages
geom_point(size = 6, color = "white", shape = 21, stroke = 2) +
geom_point(size = 2, fill = "white", shape = 21) +
scale_color_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
scale_fill_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 12, face = "bold", hjust = 0.5,
color = "black"),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(10, 10, 10, 10),
text = element_text(face = "bold")
) +
labs(
x = NULL,
y = "Erwartete Erststimmenverteilung in Prozent") +
geom_text(aes(label = value_label, y = value), hjust = 2, size = 3, color = "black", fontface = "bold")
ggsave(filename = paste0("plots/wk_forecast_wo_uncert/wk_", w, ".png"),
plot = temp_forecast,
width = 7, height = 4)
}
for (w in wks) {
temp_forecast <- df_forecasts_districts %>%
filter(wkr == w,
!partei %in% c("AND", "And.")) %>%
mutate(value_label = round(value, 1),
value_label = ifelse(value_label %% 1 == 0, str_c(value_label, ".0"), value_label),
value_label = str_replace_all(value_label, "\\.", ",")) %>%
ggplot(aes(x = reorder(partei, -value), y = value, fill = partei)) +
# Add background bars for value_l1 and nudge them to the left
# geom_col(aes(y = value_l1), alpha = 0.1, position = position_nudge(x = -0.1)) +
geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.3,
position=position_dodge(width=.5)) +
geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.7,
position=position_dodge(width=.5)) +
scale_y_continuous(labels = percent_format(scale = 1)) +  # Convert y-axis to percentages
geom_point(size = 6, color = "white", shape = 21, stroke = 2) +
geom_point(size = 2, fill = "white", shape = 21) +
scale_color_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
scale_fill_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 12, face = "bold", hjust = 0.5,
color = "black"),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(10, 10, 10, 10)
) +
labs(
x = NULL,
y = "Erwarteter Erststimmenanteil in Prozent",
caption = "Erststimmenergebnisse bei der Bundestagswahl 2021 im Hintergrund",
) +
geom_text(aes(label = value_label, y = value), hjust = 2, size = 3, color = "black", fontface = "bold")
ggsave(filename = paste0("plots/wk_forecast_w_uncert/wk_", w, ".png"),
plot = temp_forecast,
width = 7, height = 4)
}
ggsave(filename = paste0("plots/fed_forecast_wo_uncert.png"),
plot = temp_forecast,
width = 7, height = 4)
df_forecasts_federal %>%
mutate(value_label = round(value, 1),
value_label = ifelse(value_label %% 1 == 0, str_c(value_label, ".0"), value_label),
value_label = str_replace_all(value_label, "\\.", ",")) %>%
ggplot(aes(x = reorder(name, -value), y = value, fill = name)) +
# Add background bars for value_l1 and nudge them to the left
#geom_col(aes(y = value_l1), alpha = 0.1, position = position_nudge(x = -0.1)) +
geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.3,
position=position_dodge(width=.5)) +
geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.7,
position=position_dodge(width=.5)) +
scale_y_continuous(labels = percent_format(scale = 1)) +  # Convert y-axis to percentages
geom_point(size = 6, color = "white", shape = 21, stroke = 2) +
geom_point(size = 2, fill = "white", shape = 21) +
scale_color_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
scale_fill_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 12, face = "bold", hjust = 0.5,
color = "black"),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(10, 10, 10, 10),
text = element_text(face = "bold")
) +
labs(
x = NULL,
y = "Erwartete Zweitstimmenverteilung in Prozent",,
) +
geom_text(aes(label = value_label, y = value), hjust = 2, size = 3, color = "black", fontface = "bold")
df_forecasts_federal %>%
mutate(value_label = round(value, 1),
value_label = ifelse(value_label %% 1 == 0, str_c(value_label, ".0"), value_label),
value_label = str_replace_all(value_label, "\\.", ",")) %>%
ggplot(aes(x = reorder(name, -value), y = value, fill = name)) +
# Add background bars for value_l1 and nudge them to the left
#geom_col(aes(y = value_l1), alpha = 0.1, position = position_nudge(x = -0.1)) +
# geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.3,
#                position=position_dodge(width=.5)) +
# geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.7,
#                position=position_dodge(width=.5)) +
scale_y_continuous(labels = percent_format(scale = 1)) +  # Convert y-axis to percentages
geom_point(size = 6, color = "white", shape = 21, stroke = 2) +
geom_point(size = 2, fill = "white", shape = 21) +
scale_color_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
scale_fill_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 12, face = "bold", hjust = 0.5,
color = "black"),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(10, 10, 10, 10),
text = element_text(face = "bold")
) +
labs(
x = NULL,
y = "Erwartete Zweitstimmenverteilung in Prozent",,
) +
geom_text(aes(label = value_label, y = value), hjust = 2, size = 3, color = "black", fontface = "bold")
ggsave(filename = paste0("plots/fed_forecast_wo_uncert.png"),
plot = temp_forecast,
width = 7, height = 4)
df_forecasts_federal %>%
mutate(value_label = round(value, 1),
value_label = ifelse(value_label %% 1 == 0, str_c(value_label, ".0"), value_label),
value_label = str_replace_all(value_label, "\\.", ",")) %>%
ggplot(aes(x = reorder(name, -value), y = value, fill = name)) +
# Add background bars for value_l1 and nudge them to the left
#geom_col(aes(y = value_l1), alpha = 0.1, position = position_nudge(x = -0.1)) +
# geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.3,
#                position=position_dodge(width=.5)) +
# geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.7,
#                position=position_dodge(width=.5)) +
scale_y_continuous(labels = percent_format(scale = 1)) +  # Convert y-axis to percentages
geom_point(size = 6, color = "white", shape = 21, stroke = 2) +
geom_point(size = 2, fill = "white", shape = 21) +
scale_color_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
scale_fill_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 12, face = "bold", hjust = 0.5,
color = "black"),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(10, 10, 10, 10),
text = element_text(face = "bold")
) +
labs(
x = NULL,
y = "Erwartete Zweitstimmenverteilung in Prozent",,
) +
geom_text(aes(label = value_label, y = value), hjust = 2, size = 3, color = "black", fontface = "bold")
ggsave(filename = paste0("plots/fed_forecast_wo_uncert.png"),
plot = temp_forecast,
width = 7, height = 4)
temp_forecast <- df_forecasts_federal %>%
mutate(value_label = round(value, 1),
value_label = ifelse(value_label %% 1 == 0, str_c(value_label, ".0"), value_label),
value_label = str_replace_all(value_label, "\\.", ",")) %>%
ggplot(aes(x = reorder(name, -value), y = value, fill = name)) +
# Add background bars for value_l1 and nudge them to the left
#geom_col(aes(y = value_l1), alpha = 0.1, position = position_nudge(x = -0.1)) +
# geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.3,
#                position=position_dodge(width=.5)) +
# geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.7,
#                position=position_dodge(width=.5)) +
scale_y_continuous(labels = percent_format(scale = 1)) +  # Convert y-axis to percentages
geom_point(size = 6, color = "white", shape = 21, stroke = 2) +
geom_point(size = 2, fill = "white", shape = 21) +
scale_color_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
scale_fill_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 12, face = "bold", hjust = 0.5,
color = "black"),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(10, 10, 10, 10),
text = element_text(face = "bold")
) +
labs(
x = NULL,
y = "Erwartete Zweitstimmenverteilung in Prozent",,
) +
geom_text(aes(label = value_label, y = value), hjust = 2, size = 3, color = "black", fontface = "bold")
ggsave(filename = paste0("plots/fed_forecast_wo_uncert.png"),
plot = temp_forecast,
width = 7, height = 4)
temp_forecast <- df_forecasts_federal %>%
mutate(value_label = round(value, 1),
value_label = ifelse(value_label %% 1 == 0, str_c(value_label, ".0"), value_label),
value_label = str_replace_all(value_label, "\\.", ",")) %>%
ggplot(aes(x = reorder(name, -value), y = value, fill = name)) +
# Add background bars for value_l1 and nudge them to the left
#geom_col(aes(y = value_l1), alpha = 0.1, position = position_nudge(x = -0.1)) +
geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.3,
position=position_dodge(width=.5)) +
geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.7,
position=position_dodge(width=.5)) +
scale_y_continuous(labels = percent_format(scale = 1)) +  # Convert y-axis to percentages
geom_point(size = 6, color = "white", shape = 21, stroke = 2) +
geom_point(size = 2, fill = "white", shape = 21) +
scale_color_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
scale_fill_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 12, face = "bold", hjust = 0.5,
color = "black"),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(10, 10, 10, 10),
text = element_text(face = "bold")
) +
labs(
x = NULL,
y = "Erwartete Zweitstimmenverteilung in Prozent",,
) +
geom_text(aes(label = value_label, y = value), hjust = 2, size = 3, color = "black", fontface = "bold")
ggsave(filename = paste0("plots/fed_forecast_w_uncert.png"),
plot = temp_forecast,
width = 7, height = 4)
temp_forecast <- df_forecasts_federal %>%
mutate(value_label = round(value, 1),
value_label = ifelse(value_label %% 1 == 0, str_c(value_label, ".0"), value_label),
value_label = str_replace_all(value_label, "\\.", ",")) %>%
ggplot(aes(x = reorder(name, -value), y = value, fill = name)) +
# Add background bars for value_l1 and nudge them to the left
#geom_col(aes(y = value_l1), alpha = 0.1, position = position_nudge(x = -0.1)) +
geom_linerange(aes(ymin = low, ymax = high, color = name), linewidth = 10, alpha = 0.3,
position=position_dodge(width=.5)) +
geom_linerange(aes(ymin = low, ymax = high, color = name), linewidth = 10, alpha = 0.7,
position=position_dodge(width=.5)) +
scale_y_continuous(labels = percent_format(scale = 1)) +  # Convert y-axis to percentages
geom_point(size = 6, color = "white", shape = 21, stroke = 2) +
geom_point(size = 2, fill = "white", shape = 21) +
scale_color_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
scale_fill_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 12, face = "bold", hjust = 0.5,
color = "black"),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(10, 10, 10, 10),
text = element_text(face = "bold")
) +
labs(
x = NULL,
y = "Erwartete Zweitstimmenverteilung in Prozent",,
) +
geom_text(aes(label = value_label, y = value), hjust = 2, size = 3, color = "black", fontface = "bold")
ggsave(filename = paste0("plots/fed_forecast_w_uncert.png"),
plot = temp_forecast,
width = 7, height = 4)
ggsave(filename = paste0("plots/fed_forecast_w_uncert.png"),
plot = temp_forecast,
bg = "white",
width = 7, height = 4)
ggsave(filename = paste0("plots/fed_forecast_wo_uncert.png"),
plot = temp_forecast,
bg = "white",
width = 7, height = 4)
for (w in wks) {
temp_forecast <- df_forecasts_districts %>%
filter(wkr == w,
!partei %in% c("AND", "And.")) %>%
mutate(value_label = round(value, 1),
value_label = ifelse(value_label %% 1 == 0, str_c(value_label, ".0"), value_label),
value_label = str_replace_all(value_label, "\\.", ",")) %>%
ggplot(aes(x = reorder(partei, -value), y = value, fill = partei)) +
# Add background bars for value_l1 and nudge them to the left
# geom_col(aes(y = value_l1), alpha = 0.1, position = position_nudge(x = -0.1)) +
geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.3,
position=position_dodge(width=.5)) +
geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.7,
position=position_dodge(width=.5)) +
scale_y_continuous(labels = percent_format(scale = 1)) +  # Convert y-axis to percentages
geom_point(size = 6, color = "white", shape = 21, stroke = 2) +
geom_point(size = 2, fill = "white", shape = 21) +
scale_color_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
scale_fill_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 12, face = "bold", hjust = 0.5,
color = "black"),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(10, 10, 10, 10)
) +
labs(
x = NULL,
y = "Erwarteter Erststimmenanteil in Prozent",
caption = "Erststimmenergebnisse bei der Bundestagswahl 2021 im Hintergrund",
) +
geom_text(aes(label = value_label, y = value), hjust = 2, size = 3, color = "black", fontface = "bold")
ggsave(filename = paste0("plots/wk_forecast_w_uncert/wk_", w, ".png"),
plot = temp_forecast,
bg = "white",
width = 7, height = 4)
}
for (w in wks) {
temp_forecast <- df_forecasts_districts %>%
filter(wkr == w,
!partei %in% c("AND", "And.")) %>%
mutate(value_label = round(value, 1),
value_label = ifelse(value_label %% 1 == 0, str_c(value_label, ".0"), value_label),
value_label = str_replace_all(value_label, "\\.", ",")) %>%
ggplot(aes(x = reorder(partei, -value), y = value, fill = partei)) +
# Add background bars for value_l1 and nudge them to the left
#geom_col(aes(y = value_l1), alpha = 0.1, position = position_nudge(x = -0.1)) +
# geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.3,
#                position=position_dodge(width=.5)) +
# geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.7,
#                position=position_dodge(width=.5)) +
scale_y_continuous(labels = percent_format(scale = 1)) +  # Convert y-axis to percentages
geom_point(size = 6, color = "white", shape = 21, stroke = 2) +
geom_point(size = 2, fill = "white", shape = 21) +
scale_color_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
scale_fill_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 12, face = "bold", hjust = 0.5,
color = "black"),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(10, 10, 10, 10),
text = element_text(face = "bold")
) +
labs(
x = NULL,
y = "Erwartete Erststimmenverteilung in Prozent") +
geom_text(aes(label = value_label, y = value), hjust = 2, size = 3, color = "black", fontface = "bold")
ggsave(filename = paste0("plots/wk_forecast_wo_uncert/wk_", w, ".png"),
plot = temp_forecast,
bg = "white",
width = 7, height = 4)
}
temp_forecast <- df_forecasts_federal %>%
mutate(value_label = round(value, 1),
value_label = ifelse(value_label %% 1 == 0, str_c(value_label, ".0"), value_label),
value_label = str_replace_all(value_label, "\\.", ",")) %>%
ggplot(aes(x = reorder(name, -value), y = value, fill = name)) +
# Add background bars for value_l1 and nudge them to the left
#geom_col(aes(y = value_l1), alpha = 0.1, position = position_nudge(x = -0.1)) +
geom_linerange(aes(ymin = low, ymax = high, color = name), linewidth = 10, alpha = 0.3,
position=position_dodge(width=.5)) +
geom_linerange(aes(ymin = low, ymax = high, color = name), linewidth = 10, alpha = 0.7,
position=position_dodge(width=.5)) +
scale_y_continuous(labels = percent_format(scale = 1)) +  # Convert y-axis to percentages
geom_point(size = 6, color = "white", shape = 21, stroke = 2) +
geom_point(size = 2, fill = "white", shape = 21) +
scale_color_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
scale_fill_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 12, face = "bold", hjust = 0.5,
color = "black"),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(10, 10, 10, 10),
text = element_text(face = "bold")
) +
labs(
x = NULL,
y = "Erwartete Zweitstimmenverteilung in Prozent",,
) +
geom_text(aes(label = value_label, y = value), hjust = 2, size = 3, color = "black", fontface = "bold")
ggsave(filename = paste0("plots/fed_forecast_w_uncert.png"),
plot = temp_forecast,
bg = "white",
width = 7, height = 4)
temp_forecast <- df_forecasts_federal %>%
mutate(value_label = round(value, 1),
value_label = ifelse(value_label %% 1 == 0, str_c(value_label, ".0"), value_label),
value_label = str_replace_all(value_label, "\\.", ",")) %>%
ggplot(aes(x = reorder(name, -value), y = value, fill = name)) +
# Add background bars for value_l1 and nudge them to the left
#geom_col(aes(y = value_l1), alpha = 0.1, position = position_nudge(x = -0.1)) +
# geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.3,
#                position=position_dodge(width=.5)) +
# geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.7,
#                position=position_dodge(width=.5)) +
scale_y_continuous(labels = percent_format(scale = 1)) +  # Convert y-axis to percentages
geom_point(size = 6, color = "white", shape = 21, stroke = 2) +
geom_point(size = 2, fill = "white", shape = 21) +
scale_color_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
scale_fill_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 12, face = "bold", hjust = 0.5,
color = "black"),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(10, 10, 10, 10),
text = element_text(face = "bold")
) +
labs(
x = NULL,
y = "Erwartete Zweitstimmenverteilung in Prozent",,
) +
geom_text(aes(label = value_label, y = value), hjust = 2, size = 3, color = "black", fontface = "bold")
ggsave(filename = paste0("plots/fed_forecast_wo_uncert.png"),
plot = temp_forecast,
bg = "white",
width = 7, height = 4)
for (w in wks) {
temp_forecast <- df_forecasts_districts %>%
filter(wkr == w,
!partei %in% c("AND", "And.")) %>%
mutate(value_label = round(value, 1),
value_label = ifelse(value_label %% 1 == 0, str_c(value_label, ".0"), value_label),
value_label = str_replace_all(value_label, "\\.", ",")) %>%
ggplot(aes(x = reorder(partei, -value), y = value, fill = partei)) +
# Add background bars for value_l1 and nudge them to the left
# geom_col(aes(y = value_l1), alpha = 0.1, position = position_nudge(x = -0.1)) +
geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.3,
position=position_dodge(width=.5)) +
geom_linerange(aes(ymin = low, ymax = high, color = partei), linewidth = 10, alpha = 0.7,
position=position_dodge(width=.5)) +
scale_y_continuous(labels = percent_format(scale = 1)) +  # Convert y-axis to percentages
geom_point(size = 6, color = "white", shape = 21, stroke = 2) +
geom_point(size = 2, fill = "white", shape = 21) +
scale_color_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
scale_fill_manual(values = df_forecasts_districts$color, breaks = df_forecasts_districts$partei) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 12, face = "bold", hjust = 0.5,
color = "black"),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(10, 10, 10, 10)
) +
labs(
x = NULL,
y = "Erwarteter Erststimmenanteil in Prozent"  ) +
geom_text(aes(label = value_label, y = value), hjust = 2, size = 3, color = "black", fontface = "bold")
ggsave(filename = paste0("plots/wk_forecast_w_uncert/wk_", w, ".png"),
plot = temp_forecast,
bg = "white",
width = 7, height = 4)
}
